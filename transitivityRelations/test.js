const tester = require('./transitivityRelations');

const testCases = [
  // [testCase, expectedOutput]
  [['(1,1,1)', '(1,0,0)', '(0,1,0)'], '(1,2)-(2,0)'],
  [['(1,1,1)', '(0,1,1)', '(0,1,1)'], 'transitive'],
  [['(0,1,0,0)', '(0,0,1,0)', '(0,0,1,1)', '(0,0,0,1)'], '(0,2)-(0,3)-(1,3)'],
  [['(1,1)', '(1,1)'], 'transitive'],
  [['(1,0)', '(0,1)'], 'transitive'],
  [
    ['(1,1,0,0)', '(0,0,1,0)', '(0,1,0,1)', '(1,0,0,1)'],
    '(0,2)-(0,3)-(1,0)-(1,3)-(2,0)-(3,1)-(3,2)',
  ],
  [['(1,1,0)', '(0,0,1)', '(0,0,0)'], '(0,2)'],
  [['(0,1,0)', '(1,0,1)', '(0,1,0)'], '(0,2)-(2,0)'],
  [['(1,1,0,1,0)', '(0,1,0,0,0)', '(0,0,1,0,0)', '(1,0,0,1,0)', '(0,1,0,0,1)'], '(3,1)'],
  [['(1,1,1,1)', '(0,1,1,0)', '(0,0,1,1)', '(0,0,0,1)'], '(1,3)'],
];

let testRes;
testCases.forEach((test) => {
  testRes = tester(test[0]);
  if (testRes === test[1]) console.log('\x1b[36m%s\x1b[0m', 'True');
  else console.log('\x1b[41m%s\x1b[0m', 'False : ' + test[0] + ' ==> ' + testRes);
});
